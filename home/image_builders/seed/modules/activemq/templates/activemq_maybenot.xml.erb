<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <value>file:${activemq.base}/conf/credentials.properties</value>
    </property>
  </bean>

  <broker xmlns="http://activemq.apache.org/schema/core" brokerName="<%= hostname -%>" dataDirectory="${activemq.base}/data" useJmx="true">

    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry topic=">" producerFlowControl="false" memoryLimit="100mb">
            <pendingSubscriberPolicy>
              <vmCursor />
            </pendingSubscriberPolicy>
          </policyEntry>
          <policyEntry queue="*.reply.>" gcInactiveDestinations="true" inactiveTimoutBeforeGC="300000" memoryLimit="100mb">
            <pendingSubscriberPolicy>
              <vmCursor />
            </pendingSubscriberPolicy>
          </policyEntry>
          <policyEntry queue=">" producerFlowControl="true" memoryLimit="100mb">
            <pendingQueuePolicy>
              <vmQueueCursor/>
            </pendingQueuePolicy>
          </policyEntry>
        </policyEntries>
      </policyMap>
    </destinationPolicy>

    <managementContext>
      <managementContext connectorPort="1099" jmxDomainName="org.apache.activemq"/>
    </managementContext>

    <%- if has_variable?("broker_pair_hostname") then -%>
    <networkConnectors>
      <!-- <%= hostname -%> -> <%= broker_pair_hostname -%> -->
      <networkConnector
        name="<%= hostname -%>-<%= broker_pair_hostname -%>-topics"
        uri="static:(tcp://<%= broker_pair -%>:6166)"
        userName="<%= broker_pair_username -%>"
        password="<%= broker_pair_password -%>"
        duplex="true"
        decreaseNetworkConsumerPriority="true"
        networkTTL="2"
        dynamicOnly="true">
        <excludedDestinations>
          <queue physicalName=">" />
        </excludedDestinations>
      </networkConnector>

      <networkConnector
        name="<%= hostname -%>-<%= broker_pair_hostname -%>-queues"
        uri="static:(tcp://<%= broker_pair -%>:6166)"
        userName="<%= broker_pair_username -%>"
        password="<%= broker_pair_password -%>"
        duplex="true"
        decreaseNetworkConsumerPriority="true"
        networkTTL="2"
        dynamicOnly="true"
        conduitSubscriptions="false">
        <excludedDestinations>
          <topic physicalName=">" />
        </excludedDestinations>
      </networkConnector>
    </networkConnectors>
    <%- end -%>

    <persistenceAdapter>
      <kahaDB directory="${activemq.base}/data/kahadb"/>
    </persistenceAdapter>

    <plugins>
      <statisticsBrokerPlugin/>

      <simpleAuthenticationPlugin>
        <users>
          <authenticationUser username="<%= broker_pair_username -%>" password="<%= broker_pair_password -%>" groups="admins,everyone"/>
          <authenticationUser username="<%= mcollective_username -%>" password="<%= mcollective_password -%>" groups="mcollective,everyone"/>
          <authenticationUser username="<%= admin_username -%>" password="<%= admin_password -%>" groups="mcollective,admins,everyone"/>
          <authenticationUser username="nagios" password="ahkoo8boothaFoo8xah7aiqu" groups="nagios,everyone"/>
        </users>
      </simpleAuthenticationPlugin>

      <authorizationPlugin>
        <map>
          <authorizationMap>
            <authorizationEntries>
              <authorizationEntry queue=">" write="admins" read="admins" admin="admins" />
              <authorizationEntry topic=">" write="admins" read="admins" admin="admins" />
              <authorizationEntry topic="nagios.>" write="nagios" read="nagios" admin="nagios" />
              <%- subcollectives.each do |subcollective| -%>
              <authorizationEntry queue="<%= subcollective -%>.>" write="mcollective" read="mcollective" admin="mcollective" />
              <authorizationEntry topic="<%= subcollective -%>.>" write="mcollective" read="mcollective" admin="mcollective" />
              <%- end -%>
              <authorizationEntry topic="ActiveMQ.Advisory.>" write="everyone" read="everyone" admin="everyone"/>
            </authorizationEntries>
          </authorizationMap>
        </map>
      </authorizationPlugin>
    </plugins>

    <systemUsage>
      <systemUsage>
        <memoryUsage>
          <memoryUsage limit="1 gb" />
        </memoryUsage>
        <storeUsage>
          <storeUsage limit="1 gb" />
        </storeUsage>
        <tempUsage>
          <tempUsage limit="500 mb" />
        </tempUsage>
      </systemUsage>
    </systemUsage>

    <transportConnectors>
      <transportConnector name="openwire" uri="tcp://0.0.0.0:6166"/>
      <transportConnector name="stomp"   uri="stomp://0.0.0.0:6163"/>
    </transportConnectors>

  </broker>

  <import resource="jetty.xml"/>
</beans>
