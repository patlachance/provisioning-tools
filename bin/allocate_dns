#! /usr/bin/env ruby

$: << File.join(File.dirname(__FILE__), "..", "lib")

require 'provision'

class CLI
  def initialize
    f = Provision::Factory.new
    @ns = f.numbering_service
    @name = ARGV.shift
    raise("No name given to allocate") unless @name
  end

  def get_spec
    _, hostname, network, fabric = /(\w+)\.(?:(\w+)\.)?(\w+)\.net\.local$/.match(@name).to_a
    raise("Cannot understand the name '#{@name}'! Must be xxxx.yyy.zz.net.local") unless _

    network ||= 'prod'

    Provision::Core::MachineSpec.new(
      :hostname => hostname,
      :domain => "#{fabric}.net.local",
      :networks => [network.to_sym],
      :qualified_hostnames => {
        network.to_sym => @name
      }
    )
  end

  def allocate
    s = get_spec
    res = @ns.allocate_ips_for(s)
    puts res[s.networks[0].to_sym][:address].to_s
  end

  def deallocate
    s = get_spec
    res = @ns.remove_ips_for(s)
    if res[s.networks[0].to_sym] && res[s.networks[0].to_sym][:address]
      puts "Removed"
    else
      puts "Did not exist"
    end
  end
end

c = CLI.new
if File.basename($0) == 'allocate_dns'
  c.allocate
else
  c.deallocate
end
